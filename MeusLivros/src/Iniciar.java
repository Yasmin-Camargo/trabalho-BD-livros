
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.security.Principal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author 20171inf_i0246 -> Yasmin Souza Camargo
 */
public class Iniciar extends javax.swing.JFrame {

    public static final String HOST = "jdbc:postgresql://localhost:5432/";    //DEFININDO CAMINHO PARA CHEGAR NO BD
    public static final String DB_NAME = "livros";                            //NOME DO BD
    public static final String USERNAME = "postgres";                         //LOGIN
    public static final String PASSWORD = "postgres";                         //SENHA
    private Connection conectar;
    private Statement stm;
    ResultSet rs;
    PreparedStatement ps = null;

    //Declarando variaveis
    Boolean FezLogin = false;
    String livrosSalvos = "";
    String nomeArquivo = "";
    String numUser = "1";
    String nomeRegistro = "";
    String teste = "";

    /**
     * Creates new form Iniciar
     */
    public Iniciar() {
        try {
            String linha = "";
            int cont = 1;
            initComponents();
            getContentPane().setBackground(Color.red); //cor de fundo
            try {
                Class.forName("org.postgresql.Driver");
                conectar = DriverManager.getConnection(HOST + DB_NAME, USERNAME, PASSWORD);    //ATRIBUINDO INFORMAÇÕES PARA SE CONECTAR NO BANCO DE DADOS
            } catch (ClassNotFoundException | SQLException ex) {
                System.out.println("erro 1");   //tratamento de erros
                System.exit(-1);
            }

            String nome = "User"; //Definindo nome do Usuário
            numUser = "1";
            String comando = "insert into usuario (nome_usuario, cod_usuario)" //adicionando Usuário na tabela
                    + "values ('" + nome + "','" + numUser + "')";

            conectar.createStatement().execute(comando); //SE CONECTANDO AO BD

            livro.setBackground(Color.white);
            escritor.setBackground(Color.white);
            leitura1.setBackground(Color.white);
            editar.setBackground(Color.white);
            meusLivros.setBackground(Color.white);

        } catch (SQLException ex) {
            Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
        }

        editarCampo.setVisible(false);
        campo.setVisible(false);
    }

    private void atualiza() { //ATUALIZAR BD
        try {
            PreparedStatement ps = conectar.prepareStatement("select * from livro", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rs = ps.executeQuery();
            rs = ps.executeQuery();
            if (rs.first()) {
                campo.setText(rs.getString("curso"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cadastrarLivro = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        livro = new javax.swing.JInternalFrame();
        enunciado2 = new javax.swing.JLabel();
        enunciado3 = new javax.swing.JLabel();
        titulo = new javax.swing.JTextField();
        editora = new javax.swing.JTextField();
        genero = new javax.swing.JTextField();
        enunciado4 = new javax.swing.JLabel();
        enunciado1 = new javax.swing.JLabel();
        pagina = new javax.swing.JTextField();
        enunciado6 = new javax.swing.JLabel();
        idioma = new javax.swing.JTextField();
        enunciado5 = new javax.swing.JLabel();
        proximo = new javax.swing.JButton();
        ano = new javax.swing.JTextField();
        novoEscritor = new javax.swing.JButton();
        codEscritor = new javax.swing.JTextField();
        enunciado22 = new javax.swing.JLabel();
        escritor = new javax.swing.JInternalFrame();
        nomeEscritor = new javax.swing.JTextField();
        enunciado7 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        enunciado9 = new javax.swing.JLabel();
        enunciado10 = new javax.swing.JLabel();
        generoEscitor = new javax.swing.JTextField();
        adicionarEscritor = new javax.swing.JButton();
        adicionarEscritor1 = new javax.swing.JButton();
        leitura = new javax.swing.JInternalFrame();
        enunciado8 = new javax.swing.JLabel();
        situacaoLeitura = new javax.swing.JComboBox<>();
        avaliacao = new javax.swing.JComboBox<>();
        enunciado12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        anotacao = new javax.swing.JTextArea();
        salvar = new javax.swing.JButton();
        enunciado20 = new javax.swing.JLabel();
        enunciado21 = new javax.swing.JLabel();
        codigoLivro = new javax.swing.JTextField();
        adicionarEscritor2 = new javax.swing.JButton();
        enunciado23 = new javax.swing.JLabel();
        codigoEscritor = new javax.swing.JTextField();
        editar = new javax.swing.JInternalFrame();
        registro = new javax.swing.JComboBox<>();
        enunciado17 = new javax.swing.JLabel();
        campo = new javax.swing.JTextField();
        enunciado27 = new javax.swing.JLabel();
        tabela1 = new javax.swing.JComboBox<>();
        pesquisar = new javax.swing.JButton();
        enunciado28 = new javax.swing.JLabel();
        enunciado29 = new javax.swing.JLabel();
        cod1 = new javax.swing.JTextField();
        editarCampo = new javax.swing.JComboBox<>();
        botaoEditar3 = new javax.swing.JButton();
        meusLivros = new javax.swing.JInternalFrame();
        enunciado11 = new javax.swing.JLabel();
        livroSelecionado = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        buscar = new javax.swing.JButton();
        anterior = new javax.swing.JButton();
        ultimo = new javax.swing.JButton();
        posterior = new javax.swing.JButton();
        primeiro = new javax.swing.JButton();
        excluir = new javax.swing.JInternalFrame();
        enunciado25 = new javax.swing.JLabel();
        codigoCampo = new javax.swing.JTextField();
        enunciado26 = new javax.swing.JLabel();
        tabela = new javax.swing.JComboBox<>();
        excluirCampo = new javax.swing.JButton();
        visaoGeral = new javax.swing.JInternalFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt2 = new javax.swing.JTextArea();
        leitura2 = new javax.swing.JButton();
        livro1 = new javax.swing.JButton();
        escritor2 = new javax.swing.JButton();
        relacoes = new javax.swing.JButton();
        leitura1 = new javax.swing.JInternalFrame();
        enunciado13 = new javax.swing.JLabel();
        situacaoLeitura1 = new javax.swing.JComboBox<>();
        avaliacao1 = new javax.swing.JComboBox<>();
        enunciado14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        anotacao1 = new javax.swing.JTextArea();
        salvar1 = new javax.swing.JButton();
        enunciado24 = new javax.swing.JLabel();
        enunciado30 = new javax.swing.JLabel();
        codigoLivro1 = new javax.swing.JTextField();
        adicionarEscritor3 = new javax.swing.JButton();
        enunciado31 = new javax.swing.JLabel();
        codigoEscritor1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        botaoLivro = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        botaoEditar = new javax.swing.JButton();
        tabelas = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("AIGDT", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 51));
        jLabel2.setText("-GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGLLLLLLLLGGGGGGGGGG");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1370, 730, 430, 40);

        jLabel4.setFont(new java.awt.Font("AIGDT", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 204, 51));
        jLabel4.setText("-GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGLLLLLLLLGGGGGGGGGG");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(-20, 730, 1450, 40);

        jLabel6.setFont(new java.awt.Font("AIGDT", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 204, 51));
        jLabel6.setText("-GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGLLLLLLLLGGGGGGGGGG");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(1350, -10, 430, 40);

        cadastrarLivro.setBackground(new java.awt.Color(255, 255, 255));
        cadastrarLivro.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        cadastrarLivro.setForeground(new java.awt.Color(51, 51, 51));
        cadastrarLivro.setText("Cadastrar Livro");
        cadastrarLivro.setDoubleBuffered(true);
        cadastrarLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarLivroActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrarLivro);
        cadastrarLivro.setBounds(90, 250, 250, 60);

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(204, 0, 0));
        jPanel1.setLayout(null);

        livro.setBackground(new java.awt.Color(204, 0, 0));
        livro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        livro.setClosable(true);
        livro.setMaximizable(true);
        livro.setTitle("Cadastro Livro");
        livro.setMaximumSize(new java.awt.Dimension(720, 540));
        livro.setMinimumSize(new java.awt.Dimension(720, 540));
        livro.setVisible(false);
        livro.getContentPane().setLayout(null);

        enunciado2.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado2.setForeground(new java.awt.Color(255, 255, 255));
        enunciado2.setText("TITULO:");
        livro.getContentPane().add(enunciado2);
        enunciado2.setBounds(30, 20, 130, 60);

        enunciado3.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado3.setForeground(new java.awt.Color(255, 255, 255));
        enunciado3.setText("EDITORA:");
        livro.getContentPane().add(enunciado3);
        enunciado3.setBounds(30, 80, 290, 60);

        titulo.setBackground(new java.awt.Color(255, 204, 204));
        titulo.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(51, 51, 51));
        titulo.setBorder(null);
        titulo.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloActionPerformed(evt);
            }
        });
        livro.getContentPane().add(titulo);
        titulo.setBounds(140, 30, 550, 40);

        editora.setBackground(new java.awt.Color(255, 204, 204));
        editora.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        editora.setForeground(new java.awt.Color(51, 51, 51));
        editora.setBorder(null);
        editora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editoraActionPerformed(evt);
            }
        });
        livro.getContentPane().add(editora);
        editora.setBounds(150, 90, 240, 40);

        genero.setBackground(new java.awt.Color(255, 204, 204));
        genero.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        genero.setForeground(new java.awt.Color(51, 51, 51));
        genero.setBorder(null);
        genero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoActionPerformed(evt);
            }
        });
        livro.getContentPane().add(genero);
        genero.setBounds(150, 150, 240, 40);

        enunciado4.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado4.setForeground(new java.awt.Color(255, 255, 255));
        enunciado4.setText("GENERO:");
        livro.getContentPane().add(enunciado4);
        enunciado4.setBounds(30, 140, 290, 60);

        enunciado1.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado1.setForeground(new java.awt.Color(255, 255, 255));
        enunciado1.setText("ANO DE PUBLICAÇÃO:");
        livro.getContentPane().add(enunciado1);
        enunciado1.setBounds(30, 200, 290, 60);

        pagina.setBackground(new java.awt.Color(255, 204, 204));
        pagina.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        pagina.setForeground(new java.awt.Color(51, 51, 51));
        pagina.setBorder(null);
        pagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paginaActionPerformed(evt);
            }
        });
        livro.getContentPane().add(pagina);
        pagina.setBounds(150, 270, 100, 40);

        enunciado6.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado6.setForeground(new java.awt.Color(255, 255, 255));
        enunciado6.setText("COD. ESCRITOR:");
        livro.getContentPane().add(enunciado6);
        enunciado6.setBounds(30, 380, 220, 60);

        idioma.setBackground(new java.awt.Color(255, 204, 204));
        idioma.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        idioma.setForeground(new java.awt.Color(51, 51, 51));
        idioma.setBorder(null);
        idioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idiomaActionPerformed(evt);
            }
        });
        livro.getContentPane().add(idioma);
        idioma.setBounds(140, 330, 150, 40);

        enunciado5.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado5.setForeground(new java.awt.Color(255, 255, 255));
        enunciado5.setText("PÁGINAS:");
        livro.getContentPane().add(enunciado5);
        enunciado5.setBounds(30, 260, 290, 60);

        proximo.setBackground(new java.awt.Color(255, 255, 255));
        proximo.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        proximo.setText("->");
        proximo.setBorder(null);
        proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proximoActionPerformed(evt);
            }
        });
        livro.getContentPane().add(proximo);
        proximo.setBounds(600, 450, 80, 40);

        ano.setBackground(new java.awt.Color(255, 204, 204));
        ano.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        ano.setForeground(new java.awt.Color(51, 51, 51));
        ano.setBorder(null);
        ano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anoActionPerformed(evt);
            }
        });
        livro.getContentPane().add(ano);
        ano.setBounds(320, 210, 150, 40);

        novoEscritor.setBackground(new java.awt.Color(255, 255, 255));
        novoEscritor.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        novoEscritor.setText("Novo Escritor");
        novoEscritor.setBorder(null);
        novoEscritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoEscritorActionPerformed(evt);
            }
        });
        livro.getContentPane().add(novoEscritor);
        novoEscritor.setBounds(40, 460, 170, 40);

        codEscritor.setBackground(new java.awt.Color(255, 204, 204));
        codEscritor.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codEscritor.setForeground(new java.awt.Color(51, 51, 51));
        codEscritor.setBorder(null);
        codEscritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codEscritorActionPerformed(evt);
            }
        });
        livro.getContentPane().add(codEscritor);
        codEscritor.setBounds(230, 390, 130, 40);

        enunciado22.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado22.setForeground(new java.awt.Color(255, 255, 255));
        enunciado22.setText("IDIOMA:");
        livro.getContentPane().add(enunciado22);
        enunciado22.setBounds(30, 320, 120, 60);

        jPanel1.add(livro);
        livro.setBounds(0, 0, 740, 560);

        escritor.setBackground(new java.awt.Color(204, 0, 0));
        escritor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        escritor.setClosable(true);
        escritor.setMaximizable(true);
        escritor.setTitle("Cadastro Escritor");
        escritor.setMaximumSize(new java.awt.Dimension(720, 270));
        escritor.setMinimumSize(new java.awt.Dimension(720, 270));
        escritor.setPreferredSize(new java.awt.Dimension(720, 270));
        escritor.setVisible(false);
        escritor.getContentPane().setLayout(null);

        nomeEscritor.setBackground(new java.awt.Color(255, 204, 204));
        nomeEscritor.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        nomeEscritor.setForeground(new java.awt.Color(51, 51, 51));
        nomeEscritor.setText(" ");
        nomeEscritor.setBorder(null);
        nomeEscritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeEscritorActionPerformed(evt);
            }
        });
        escritor.getContentPane().add(nomeEscritor);
        nomeEscritor.setBounds(40, 70, 550, 40);

        enunciado7.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado7.setForeground(new java.awt.Color(255, 255, 255));
        enunciado7.setText("Nome:");
        escritor.getContentPane().add(enunciado7);
        enunciado7.setBounds(30, 20, 130, 60);

        email.setBackground(new java.awt.Color(255, 204, 204));
        email.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        email.setForeground(new java.awt.Color(51, 51, 51));
        email.setBorder(null);
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        escritor.getContentPane().add(email);
        email.setBounds(40, 300, 560, 40);

        enunciado9.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado9.setForeground(new java.awt.Color(255, 255, 255));
        enunciado9.setText("Genero Literário:");
        escritor.getContentPane().add(enunciado9);
        enunciado9.setBounds(30, 130, 220, 60);

        enunciado10.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado10.setForeground(new java.awt.Color(255, 255, 255));
        enunciado10.setText("E-mail:");
        escritor.getContentPane().add(enunciado10);
        enunciado10.setBounds(30, 250, 220, 60);

        generoEscitor.setBackground(new java.awt.Color(255, 204, 204));
        generoEscitor.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        generoEscitor.setForeground(new java.awt.Color(51, 51, 51));
        generoEscitor.setBorder(null);
        generoEscitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoEscitorActionPerformed(evt);
            }
        });
        escritor.getContentPane().add(generoEscitor);
        generoEscitor.setBounds(40, 180, 250, 40);

        adicionarEscritor.setBackground(new java.awt.Color(153, 255, 153));
        adicionarEscritor.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        adicionarEscritor.setText("Adicionar escritor");
        adicionarEscritor.setBorder(null);
        adicionarEscritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEscritorActionPerformed(evt);
            }
        });
        escritor.getContentPane().add(adicionarEscritor);
        adicionarEscritor.setBounds(510, 450, 200, 40);

        adicionarEscritor1.setBackground(new java.awt.Color(255, 255, 255));
        adicionarEscritor1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        adicionarEscritor1.setText("<-");
        adicionarEscritor1.setBorder(null);
        adicionarEscritor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEscritor1ActionPerformed(evt);
            }
        });
        escritor.getContentPane().add(adicionarEscritor1);
        adicionarEscritor1.setBounds(40, 450, 70, 40);

        leitura.setClosable(true);
        leitura.setMaximizable(true);
        leitura.setResizable(true);
        leitura.setTitle("Informações de relacionamento");
        leitura.setMaximumSize(new java.awt.Dimension(730, 536));
        leitura.setMinimumSize(new java.awt.Dimension(730, 536));
        leitura.setPreferredSize(new java.awt.Dimension(730, 536));
        leitura.setVisible(false);
        leitura.getContentPane().setLayout(null);

        enunciado8.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado8.setText("ANOTAÇÃO:");
        leitura.getContentPane().add(enunciado8);
        enunciado8.setBounds(30, 180, 330, 60);

        situacaoLeitura.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        situacaoLeitura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lendo", "Terminei", "Abandonado", "Já li" }));
        leitura.getContentPane().add(situacaoLeitura);
        situacaoLeitura.setBounds(340, 130, 130, 40);

        avaliacao.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        avaliacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Péssimo", "Ruim", "Razoavel", "Bom", "Ótimo" }));
        avaliacao.setSelectedIndex(3);
        leitura.getContentPane().add(avaliacao);
        avaliacao.setBounds(200, 80, 130, 40);

        enunciado12.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado12.setText("SITUAÇÃO DE LEITURA:");
        leitura.getContentPane().add(enunciado12);
        enunciado12.setBounds(30, 120, 330, 60);

        anotacao.setColumns(20);
        anotacao.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        anotacao.setRows(5);
        jScrollPane1.setViewportView(anotacao);

        leitura.getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 230, 640, 220);

        salvar.setBackground(new java.awt.Color(255, 255, 255));
        salvar.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        leitura.getContentPane().add(salvar);
        salvar.setBounds(600, 460, 110, 40);

        enunciado20.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado20.setText("AVALIAÇÃO:");
        leitura.getContentPane().add(enunciado20);
        enunciado20.setBounds(30, 70, 200, 60);

        enunciado21.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado21.setText("CODIGO LIVRO:");
        leitura.getContentPane().add(enunciado21);
        enunciado21.setBounds(30, 10, 210, 60);

        codigoLivro.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codigoLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoLivroActionPerformed(evt);
            }
        });
        leitura.getContentPane().add(codigoLivro);
        codigoLivro.setBounds(220, 20, 110, 40);

        adicionarEscritor2.setBackground(new java.awt.Color(255, 255, 255));
        adicionarEscritor2.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        adicionarEscritor2.setText("<-");
        adicionarEscritor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEscritor2ActionPerformed(evt);
            }
        });
        leitura.getContentPane().add(adicionarEscritor2);
        adicionarEscritor2.setBounds(50, 470, 70, 40);

        enunciado23.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado23.setText("CODIGO ESCRITOR:");
        leitura.getContentPane().add(enunciado23);
        enunciado23.setBounds(360, 10, 250, 60);

        codigoEscritor.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codigoEscritor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoEscritorActionPerformed(evt);
            }
        });
        leitura.getContentPane().add(codigoEscritor);
        codigoEscritor.setBounds(590, 20, 110, 40);

        escritor.getContentPane().add(leitura);
        leitura.setBounds(0, 0, 740, 560);

        jPanel1.add(escritor);
        escritor.setBounds(0, 0, 740, 560);

        editar.setBackground(new java.awt.Color(204, 0, 0));
        editar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        editar.setClosable(true);
        editar.setMaximizable(true);
        editar.setResizable(true);
        editar.setTitle("Editar");
        editar.setVisible(false);
        editar.getContentPane().setLayout(null);

        registro.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        registro.setForeground(new java.awt.Color(51, 51, 51));
        registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registroActionPerformed(evt);
            }
        });
        editar.getContentPane().add(registro);
        registro.setBounds(260, 90, 190, 40);

        enunciado17.setFont(new java.awt.Font("MV Boli", 0, 22)); // NOI18N
        enunciado17.setForeground(new java.awt.Color(255, 255, 255));
        enunciado17.setText("REGISTRO:");
        editar.getContentPane().add(enunciado17);
        enunciado17.setBounds(260, 40, 240, 60);

        campo.setBackground(new java.awt.Color(255, 204, 204));
        campo.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        campo.setForeground(new java.awt.Color(51, 51, 51));
        campo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoActionPerformed(evt);
            }
        });
        editar.getContentPane().add(campo);
        campo.setBounds(230, 290, 190, 40);

        enunciado27.setFont(new java.awt.Font("MV Boli", 0, 22)); // NOI18N
        enunciado27.setForeground(new java.awt.Color(255, 255, 255));
        enunciado27.setText("TABELA:");
        editar.getContentPane().add(enunciado27);
        enunciado27.setBounds(40, 40, 240, 60);

        tabela1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        tabela1.setForeground(new java.awt.Color(51, 51, 51));
        tabela1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Livro", "Escritor", "Leitura" }));
        tabela1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabela1ActionPerformed(evt);
            }
        });
        editar.getContentPane().add(tabela1);
        tabela1.setBounds(50, 90, 130, 40);

        pesquisar.setBackground(new java.awt.Color(255, 255, 255));
        pesquisar.setFont(new java.awt.Font("MV Boli", 0, 22)); // NOI18N
        pesquisar.setForeground(new java.awt.Color(51, 51, 51));
        pesquisar.setText("Buscar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        editar.getContentPane().add(pesquisar);
        pesquisar.setBounds(550, 80, 130, 40);

        enunciado28.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado28.setForeground(new java.awt.Color(255, 255, 255));
        enunciado28.setText("NOVO CAMPO:");
        editar.getContentPane().add(enunciado28);
        enunciado28.setBounds(40, 280, 280, 60);

        enunciado29.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado29.setForeground(new java.awt.Color(255, 255, 255));
        enunciado29.setText("CÓDIGO DO CAMPO:");
        editar.getContentPane().add(enunciado29);
        enunciado29.setBounds(40, 210, 280, 60);

        cod1.setBackground(new java.awt.Color(255, 204, 204));
        cod1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        cod1.setForeground(new java.awt.Color(51, 51, 51));
        cod1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cod1ActionPerformed(evt);
            }
        });
        editar.getContentPane().add(cod1);
        cod1.setBounds(300, 220, 120, 40);

        editarCampo.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        editarCampo.setForeground(new java.awt.Color(51, 51, 51));
        editarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarCampoActionPerformed(evt);
            }
        });
        editar.getContentPane().add(editarCampo);
        editarCampo.setBounds(50, 340, 190, 40);

        botaoEditar3.setBackground(new java.awt.Color(255, 255, 255));
        botaoEditar3.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        botaoEditar3.setForeground(new java.awt.Color(51, 51, 51));
        botaoEditar3.setText("Editar");
        botaoEditar3.setBorder(null);
        botaoEditar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditar3ActionPerformed(evt);
            }
        });
        editar.getContentPane().add(botaoEditar3);
        botaoEditar3.setBounds(500, 400, 170, 50);

        jPanel1.add(editar);
        editar.setBounds(0, 0, 740, 560);

        meusLivros.setBackground(new java.awt.Color(204, 0, 0));
        meusLivros.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        meusLivros.setClosable(true);
        meusLivros.setMaximizable(true);
        meusLivros.setResizable(true);
        meusLivros.setTitle("Meus Livros");
        meusLivros.setToolTipText("");
        meusLivros.setVisible(false);
        meusLivros.getContentPane().setLayout(null);

        enunciado11.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado11.setForeground(new java.awt.Color(255, 255, 255));
        enunciado11.setText("NOME DA TABELA:");
        meusLivros.getContentPane().add(enunciado11);
        enunciado11.setBounds(40, 30, 320, 60);

        livroSelecionado.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        livroSelecionado.setForeground(new java.awt.Color(51, 51, 51));
        livroSelecionado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Livro", "Escritor", "Leitura" }));
        livroSelecionado.setBorder(null);
        meusLivros.getContentPane().add(livroSelecionado);
        livroSelecionado.setBounds(290, 40, 130, 40);

        text.setBackground(new java.awt.Color(255, 204, 204));
        text.setColumns(20);
        text.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        text.setForeground(new java.awt.Color(51, 51, 51));
        text.setRows(5);
        jScrollPane3.setViewportView(text);

        meusLivros.getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(30, 120, 420, 370);

        buscar.setBackground(new java.awt.Color(255, 255, 255));
        buscar.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        buscar.setForeground(new java.awt.Color(51, 51, 51));
        buscar.setText("BUSCAR");
        buscar.setBorder(null);
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        meusLivros.getContentPane().add(buscar);
        buscar.setBounds(510, 130, 130, 70);

        anterior.setBackground(new java.awt.Color(255, 255, 255));
        anterior.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        anterior.setForeground(new java.awt.Color(51, 51, 51));
        anterior.setText("<-");
        anterior.setBorder(null);
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        meusLivros.getContentPane().add(anterior);
        anterior.setBounds(490, 430, 90, 40);

        ultimo.setBackground(new java.awt.Color(255, 255, 255));
        ultimo.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        ultimo.setForeground(new java.awt.Color(51, 51, 51));
        ultimo.setText("ÚLTIMO");
        ultimo.setToolTipText("");
        ultimo.setBorder(null);
        ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ultimoActionPerformed(evt);
            }
        });
        meusLivros.getContentPane().add(ultimo);
        ultimo.setBounds(480, 320, 200, 40);

        posterior.setBackground(new java.awt.Color(255, 255, 255));
        posterior.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        posterior.setForeground(new java.awt.Color(51, 51, 51));
        posterior.setText("->");
        posterior.setBorder(null);
        posterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posteriorActionPerformed(evt);
            }
        });
        meusLivros.getContentPane().add(posterior);
        posterior.setBounds(600, 430, 90, 40);

        primeiro.setBackground(new java.awt.Color(255, 255, 255));
        primeiro.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        primeiro.setForeground(new java.awt.Color(51, 51, 51));
        primeiro.setText("PRIMEIRO");
        primeiro.setBorder(null);
        primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeiroActionPerformed(evt);
            }
        });
        meusLivros.getContentPane().add(primeiro);
        primeiro.setBounds(480, 270, 200, 40);

        jPanel1.add(meusLivros);
        meusLivros.setBounds(0, 0, 740, 560);

        excluir.setBackground(new java.awt.Color(204, 0, 0));
        excluir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        excluir.setClosable(true);
        excluir.setMaximizable(true);
        excluir.setResizable(true);
        excluir.setTitle("Excluir");
        excluir.setMaximumSize(new java.awt.Dimension(730, 536));
        excluir.setMinimumSize(new java.awt.Dimension(730, 536));
        excluir.setVisible(false);
        excluir.getContentPane().setLayout(null);

        enunciado25.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado25.setForeground(new java.awt.Color(255, 255, 255));
        enunciado25.setText("CÓDIGO DO CAMPO:");
        excluir.getContentPane().add(enunciado25);
        enunciado25.setBounds(40, 130, 280, 60);

        codigoCampo.setBackground(new java.awt.Color(255, 204, 204));
        codigoCampo.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codigoCampo.setForeground(new java.awt.Color(51, 51, 51));
        codigoCampo.setBorder(null);
        codigoCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoCampoActionPerformed(evt);
            }
        });
        excluir.getContentPane().add(codigoCampo);
        codigoCampo.setBounds(290, 140, 170, 40);

        enunciado26.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado26.setForeground(new java.awt.Color(255, 255, 255));
        enunciado26.setText("NOME DA TABELA:");
        excluir.getContentPane().add(enunciado26);
        enunciado26.setBounds(40, 40, 280, 60);

        tabela.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        tabela.setForeground(new java.awt.Color(51, 51, 51));
        tabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Livro", "Escritor", "Leitura" }));
        tabela.setBorder(null);
        excluir.getContentPane().add(tabela);
        tabela.setBounds(290, 50, 130, 40);

        excluirCampo.setBackground(new java.awt.Color(255, 255, 255));
        excluirCampo.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        excluirCampo.setForeground(new java.awt.Color(51, 51, 51));
        excluirCampo.setText("EXCLUIR");
        excluirCampo.setBorder(null);
        excluirCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirCampoActionPerformed(evt);
            }
        });
        excluir.getContentPane().add(excluirCampo);
        excluirCampo.setBounds(290, 220, 120, 80);

        jPanel1.add(excluir);
        excluir.setBounds(60, 10, 570, 380);

        visaoGeral.setBackground(new java.awt.Color(204, 0, 0));
        visaoGeral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        visaoGeral.setClosable(true);
        visaoGeral.setMaximizable(true);
        visaoGeral.setTitle("MinhasTabelas");
        visaoGeral.setVisible(false);
        visaoGeral.getContentPane().setLayout(null);

        txt2.setEditable(false);
        txt2.setBackground(new java.awt.Color(255, 204, 204));
        txt2.setColumns(20);
        txt2.setFont(new java.awt.Font("MV Boli", 0, 12)); // NOI18N
        txt2.setForeground(new java.awt.Color(51, 51, 51));
        txt2.setRows(5);
        jScrollPane4.setViewportView(txt2);

        visaoGeral.getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(70, 20, 590, 420);

        leitura2.setBackground(new java.awt.Color(255, 255, 255));
        leitura2.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        leitura2.setForeground(new java.awt.Color(51, 51, 51));
        leitura2.setText("Leitura");
        leitura2.setBorder(null);
        leitura2.setDoubleBuffered(true);
        leitura2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leitura2ActionPerformed(evt);
            }
        });
        visaoGeral.getContentPane().add(leitura2);
        leitura2.setBounds(380, 470, 160, 40);

        livro1.setBackground(new java.awt.Color(255, 255, 255));
        livro1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        livro1.setForeground(new java.awt.Color(51, 51, 51));
        livro1.setText("Livro");
        livro1.setBorder(null);
        livro1.setDoubleBuffered(true);
        livro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livro1ActionPerformed(evt);
            }
        });
        visaoGeral.getContentPane().add(livro1);
        livro1.setBounds(30, 470, 160, 40);

        escritor2.setBackground(new java.awt.Color(255, 255, 255));
        escritor2.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        escritor2.setForeground(new java.awt.Color(51, 51, 51));
        escritor2.setText("Escritor");
        escritor2.setBorder(null);
        escritor2.setDoubleBuffered(true);
        escritor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escritor2ActionPerformed(evt);
            }
        });
        visaoGeral.getContentPane().add(escritor2);
        escritor2.setBounds(200, 470, 160, 40);

        relacoes.setBackground(new java.awt.Color(255, 255, 255));
        relacoes.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        relacoes.setForeground(new java.awt.Color(51, 51, 51));
        relacoes.setText("Relações");
        relacoes.setBorder(null);
        relacoes.setDoubleBuffered(true);
        relacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relacoesActionPerformed(evt);
            }
        });
        visaoGeral.getContentPane().add(relacoes);
        relacoes.setBounds(550, 470, 160, 40);

        jPanel1.add(visaoGeral);
        visaoGeral.setBounds(0, 0, 740, 560);

        leitura1.setBackground(new java.awt.Color(204, 0, 0));
        leitura1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        leitura1.setClosable(true);
        leitura1.setMaximizable(true);
        leitura1.setResizable(true);
        leitura1.setTitle("Informações de relacionamento");
        leitura1.setMaximumSize(new java.awt.Dimension(730, 536));
        leitura1.setMinimumSize(new java.awt.Dimension(730, 536));
        leitura1.setPreferredSize(new java.awt.Dimension(730, 536));
        leitura1.setVisible(false);
        leitura1.getContentPane().setLayout(null);

        enunciado13.setBackground(new java.awt.Color(255, 255, 255));
        enunciado13.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado13.setForeground(new java.awt.Color(255, 255, 255));
        enunciado13.setText("ANOTAÇÃO:");
        leitura1.getContentPane().add(enunciado13);
        enunciado13.setBounds(30, 180, 330, 60);

        situacaoLeitura1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        situacaoLeitura1.setForeground(new java.awt.Color(51, 51, 51));
        situacaoLeitura1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lendo", "Terminei", "Abandonado", "Já li" }));
        situacaoLeitura1.setBorder(null);
        leitura1.getContentPane().add(situacaoLeitura1);
        situacaoLeitura1.setBounds(340, 130, 130, 40);

        avaliacao1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        avaliacao1.setForeground(new java.awt.Color(51, 51, 51));
        avaliacao1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Péssimo", "Ruim", "Razoavel", "Bom", "Ótimo" }));
        avaliacao1.setSelectedIndex(3);
        avaliacao1.setBorder(null);
        leitura1.getContentPane().add(avaliacao1);
        avaliacao1.setBounds(200, 80, 130, 40);

        enunciado14.setBackground(new java.awt.Color(255, 255, 255));
        enunciado14.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado14.setForeground(new java.awt.Color(255, 255, 255));
        enunciado14.setText("SITUAÇÃO DE LEITURA:");
        leitura1.getContentPane().add(enunciado14);
        enunciado14.setBounds(30, 120, 330, 60);

        anotacao1.setBackground(new java.awt.Color(255, 204, 204));
        anotacao1.setColumns(20);
        anotacao1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        anotacao1.setForeground(new java.awt.Color(51, 51, 51));
        anotacao1.setRows(5);
        anotacao1.setBorder(null);
        jScrollPane2.setViewportView(anotacao1);

        leitura1.getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(30, 230, 640, 220);

        salvar1.setBackground(new java.awt.Color(255, 255, 255));
        salvar1.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        salvar1.setForeground(new java.awt.Color(51, 51, 51));
        salvar1.setText("Salvar");
        salvar1.setBorder(null);
        salvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvar1ActionPerformed(evt);
            }
        });
        leitura1.getContentPane().add(salvar1);
        salvar1.setBounds(600, 460, 110, 40);

        enunciado24.setBackground(new java.awt.Color(255, 255, 255));
        enunciado24.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado24.setForeground(new java.awt.Color(255, 255, 255));
        enunciado24.setText("AVALIAÇÃO:");
        leitura1.getContentPane().add(enunciado24);
        enunciado24.setBounds(30, 70, 200, 60);

        enunciado30.setBackground(new java.awt.Color(255, 255, 255));
        enunciado30.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado30.setForeground(new java.awt.Color(255, 255, 255));
        enunciado30.setText("CODIGO LIVRO:");
        leitura1.getContentPane().add(enunciado30);
        enunciado30.setBounds(30, 10, 210, 60);

        codigoLivro1.setBackground(new java.awt.Color(255, 204, 204));
        codigoLivro1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codigoLivro1.setForeground(new java.awt.Color(51, 51, 51));
        codigoLivro1.setBorder(null);
        codigoLivro1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoLivro1ActionPerformed(evt);
            }
        });
        leitura1.getContentPane().add(codigoLivro1);
        codigoLivro1.setBounds(220, 20, 110, 40);

        adicionarEscritor3.setBackground(new java.awt.Color(255, 255, 255));
        adicionarEscritor3.setFont(new java.awt.Font("MV Boli", 0, 18)); // NOI18N
        adicionarEscritor3.setForeground(new java.awt.Color(51, 51, 51));
        adicionarEscritor3.setText("<-");
        adicionarEscritor3.setBorder(null);
        adicionarEscritor3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarEscritor3ActionPerformed(evt);
            }
        });
        leitura1.getContentPane().add(adicionarEscritor3);
        adicionarEscritor3.setBounds(50, 470, 70, 40);

        enunciado31.setBackground(new java.awt.Color(255, 255, 255));
        enunciado31.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        enunciado31.setForeground(new java.awt.Color(255, 255, 255));
        enunciado31.setText("CODIGO ESCRITOR:");
        leitura1.getContentPane().add(enunciado31);
        enunciado31.setBounds(360, 10, 250, 60);

        codigoEscritor1.setBackground(new java.awt.Color(255, 204, 204));
        codigoEscritor1.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        codigoEscritor1.setForeground(new java.awt.Color(51, 51, 51));
        codigoEscritor1.setBorder(null);
        codigoEscritor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoEscritor1ActionPerformed(evt);
            }
        });
        leitura1.getContentPane().add(codigoEscritor1);
        codigoEscritor1.setBounds(590, 20, 110, 40);

        jPanel1.add(leitura1);
        leitura1.setBounds(0, 0, 740, 560);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(410, 50, 740, 560);

        jLabel7.setBackground(new java.awt.Color(204, 0, 0));
        jLabel7.setFont(new java.awt.Font("AIGDT", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("-GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGLLLLLLLLGGGGGGGGGG");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(-40, -10, 1480, 40);

        jLabel5.setFont(new java.awt.Font("AIGDT", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("-GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGLLLLLLLLGGGGGGGGGG");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-10, 630, 1480, 40);

        botaoLivro.setBackground(new java.awt.Color(255, 255, 255));
        botaoLivro.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        botaoLivro.setForeground(new java.awt.Color(51, 51, 51));
        botaoLivro.setText("Meus Livros");
        botaoLivro.setDoubleBuffered(true);
        botaoLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLivroActionPerformed(evt);
            }
        });
        getContentPane().add(botaoLivro);
        botaoLivro.setBounds(90, 320, 250, 60);

        botaoExcluir.setBackground(new java.awt.Color(255, 255, 255));
        botaoExcluir.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        botaoExcluir.setForeground(new java.awt.Color(51, 51, 51));
        botaoExcluir.setText("Excluir");
        botaoExcluir.setDoubleBuffered(true);
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(botaoExcluir);
        botaoExcluir.setBounds(90, 460, 250, 60);

        jLabel11.setFont(new java.awt.Font("MV Boli", 0, 49)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 255, 255));
        jLabel11.setText("Books");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(110, 100, 250, 100);

        botaoEditar.setBackground(new java.awt.Color(255, 255, 255));
        botaoEditar.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        botaoEditar.setForeground(new java.awt.Color(51, 51, 51));
        botaoEditar.setText("Editar");
        botaoEditar.setDoubleBuffered(true);
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });
        getContentPane().add(botaoEditar);
        botaoEditar.setBounds(90, 390, 250, 60);

        tabelas.setBackground(new java.awt.Color(255, 255, 255));
        tabelas.setFont(new java.awt.Font("MV Boli", 0, 24)); // NOI18N
        tabelas.setForeground(new java.awt.Color(51, 51, 51));
        tabelas.setText("Tabelas");
        tabelas.setDoubleBuffered(true);
        tabelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabelasActionPerformed(evt);
            }
        });
        getContentPane().add(tabelas);
        tabelas.setBounds(140, 550, 150, 60);

        jLabel10.setFont(new java.awt.Font("MV Boli", 0, 51)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("My Personal");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(-40, 20, 520, 150);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\20171inf_i0246\\Downloads\\Untitled design (3).png")); // NOI18N
        jButton1.setAutoscrolls(true);
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(250, 120, 80, 70);

        jLabel1.setBackground(new java.awt.Color(102, 0, 0));
        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Desenvolvido por: Yasmin Souza Camargo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(980, 610, 220, 20);

        setSize(new java.awt.Dimension(1216, 689));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        editar.setVisible(true);
        leitura1.setVisible(false);
        livro.setVisible(false);
        escritor.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

    }//GEN-LAST:event_botaoEditarActionPerformed

    private void cadastrarLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarLivroActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        livro.setVisible(true);
        editar.setVisible(false);
        leitura1.setVisible(false);
        escritor.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

    }//GEN-LAST:event_cadastrarLivroActionPerformed

    private void tituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloActionPerformed

    private void editoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editoraActionPerformed

    private void generoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generoActionPerformed

    private void paginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paginaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paginaActionPerformed

    private void idiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idiomaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idiomaActionPerformed

    private void proximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proximoActionPerformed
        if (!teste.equals(titulo.getText())) { //Teste para ver se é o dado inserido é novo
            try { //INSERINDO DADOS NA TABELA LIVRO
                String comando = "insert into livro (titulo_livro, editora_livro, genero_livro, idioma_livro, ano_publicacao_livro, qte_paginas_livro) "
                        + "values ('" + titulo.getText() + "','" + editora.getText() + "','" + genero.getText() + "','"
                        + idioma.getText() + "','" + ano.getText() + "', '" + pagina.getText() + "')";
                conectar.createStatement().execute(comando);

                //MUDANÇA DE JANELAS
                leitura1.setVisible(true);
                livro.setVisible(false);
                editar.setVisible(false);
                escritor.setVisible(false);
                meusLivros.setVisible(false);
                excluir.setVisible(false);
                visaoGeral.setVisible(false);

            } catch (SQLException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        teste = titulo.getText();
    }//GEN-LAST:event_proximoActionPerformed

    private void anoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anoActionPerformed

    private void nomeEscritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeEscritorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeEscritorActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void generoEscitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoEscitorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generoEscitorActionPerformed

    private void novoEscritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoEscritorActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        escritor.setVisible(true);
        livro.setVisible(false);
        editar.setVisible(false);
        leitura1.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

    }//GEN-LAST:event_novoEscritorActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        // TODO add your handling code here

        //MUDANÇA DE JANELAS
        leitura1.setVisible(false);
        escritor.setVisible(false);
        livro.setVisible(false);
        editar.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

        int numAvaliacao = avaliacao.getSelectedIndex();    //Pegando Item Selecionado
        String textAvaliacao = "bom";
        if (numAvaliacao == 0) {
            textAvaliacao = "pessimo";
        } else if (numAvaliacao == 1) {
            textAvaliacao = "ruim";
        } else if (numAvaliacao == 2) {
            textAvaliacao = "razoavel";
        } else if (numAvaliacao == 3) {
            textAvaliacao = "bom";
        } else if (numAvaliacao == 4) {
            textAvaliacao = "otimo";
        }

        int numLeitura = situacaoLeitura.getSelectedIndex();    //Pegando Item Selecionado
        String textLeitura = "lendo";
        if (numLeitura == 0) {
            textLeitura = "lendo";
        } else if (numLeitura == 1) {
            textLeitura = "terminei";
        } else if (numLeitura == 2) {
            textLeitura = "abandonado";
        } else if (numLeitura == 3) {
            textLeitura = "ja li";
        }

        try {     //ATRIBUINDO DADOS NA TABELA LEITURA
            String comando = "insert into leitura (fk_cod_usuario,fk_cod_livro,avaliacao, anotacao_leitura,situacao_leitura)"
                    + "values ('" + numUser + "','" + codigoLivro.getText() + "','" + textAvaliacao + "','" + anotacao.getText() + "','" + textLeitura + "')";
            conectar.createStatement().execute(comando);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Essa relação já existe");
            leitura1.setVisible(true);
        }

        try {     //ATRIBUINDO RELAÇÕES ENTRE LIVRO E ESCRITOR
            String comando = "insert into escritor_livro (fk_cod_livro, fk_cod_escritor) "
                    + "values ('" + codigoLivro.getText() + "','" + codigoEscritor.getText() + "')";
            conectar.createStatement().execute(comando);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Essa relação já existe");
            leitura1.setVisible(true);
        }

    }//GEN-LAST:event_salvarActionPerformed

    private void adicionarEscritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEscritorActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        escritor.setVisible(false);
        livro.setVisible(true);
        editar.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

        try { //INSERINDO DADOS NA TABELA ESCRITOR
            String comando = "insert into escritor (nome_escritor, email_escritor, genero_literario_escritor)"
                    + "values ('" + nomeEscritor.getText() + "','" + email.getText() + "','" + generoEscitor.getText() + "')";
            conectar.createStatement().execute(comando);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "O CAMPO NOME DO ESCRITOR DEVE ESTAR PREENCHIDO!!");
        }


    }//GEN-LAST:event_adicionarEscritorActionPerformed

    private void botaoLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLivroActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        meusLivros.setVisible(true);
        escritor.setVisible(false);
        livro.setVisible(false);
        editar.setVisible(false);
        leitura1.setVisible(false);
        excluir.setVisible(false);
        visaoGeral.setVisible(false);

    }//GEN-LAST:event_botaoLivroActionPerformed

    private void codigoLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoLivroActionPerformed

    private void adicionarEscritor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEscritor1ActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        escritor.setVisible(false);
        livro.setVisible(true);
    }//GEN-LAST:event_adicionarEscritor1ActionPerformed

    private void adicionarEscritor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEscritor2ActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        leitura1.setVisible(false);
        livro.setVisible(true);
    }//GEN-LAST:event_adicionarEscritor2ActionPerformed

    private void codEscritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codEscritorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codEscritorActionPerformed

    private void codigoEscritorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoEscritorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoEscritorActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        // TODO add your handling code here:

        //MUDANÇA DE JANELAS
        livro.setVisible(false);
        editar.setVisible(false);
        leitura1.setVisible(false);
        escritor.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(true);
        visaoGeral.setVisible(false);
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void codigoCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoCampoActionPerformed

    private void excluirCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirCampoActionPerformed
        // TODO add your handling code here:
        if (tabela.getSelectedIndex() == 0) { //EXCLUINDO REGISTRO DA TABELA LIVRO
            try {
                String excluir = "delete from livro where cod_livro = " + codigoCampo.getText();
                conectar.createStatement().execute(excluir);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Essa tabela pertence a uma relação, primeiro você deve apagar o registro derivado da relação");
            }
        } else if (tabela.getSelectedIndex() == 1) { //EXCLUINDO REGISTRO DA TABELA ESCRITOR
            try {
                String excluir = "delete from escritor where cod_escritor = " + codigoCampo.getText();
                conectar.createStatement().execute(excluir);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Essa tabela pertence a uma relação, primeiro você deve apagar o registro derivado da relação");
            }
        }
        if (tabela.getSelectedIndex() == 2) { //EXCLUINDO REGISTRO DA TABELA LEITURA
            try {
                String excluir = "delete from leitura where cod_leitura = " + codigoCampo.getText();
                conectar.createStatement().execute(excluir);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Essa tabela pertence a uma relação, primeiro você deve apagar o registro derivado da relação");
            }
            try {
                int codEscLiv = Integer.parseInt(codigoCampo.getText()) - 14;
                String excluir = "delete from escritor_livro where cod_livro_escritor = " + String.valueOf(codEscLiv);
                conectar.createStatement().execute(excluir);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Essa tabela pertence a uma relação, primeiro você deve apagar o registro derivado da relação");
            }
        }
    }//GEN-LAST:event_excluirCampoActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        if (livroSelecionado.getSelectedIndex() == 0) {  //MOSTRANDO INFORMAÇÕES DA TABELA LIVRO
            String inserir = "select * from livro order by cod_livro";
            try {
                ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
                rs = ps.executeQuery();
                rs.next();
                text.setText("");
                text.append("\n TITULO:");
                text.append(rs.getString("titulo_livro"));
                text.append("\n EDITORA:");
                text.append(rs.getString("editora_livro"));
                text.append("\n GENERO:");
                text.append(rs.getString("genero_livro"));
                text.append("\n PAGINAS:");
                text.append(rs.getString("qte_paginas_livro"));
                text.append("\n IDIOMA:");
                text.append(rs.getString("idioma_livro"));
                text.append("\n ANO:");
                text.append(rs.getString("ano_publicacao_livro"));
                text.append("\n __________________________________ CODIGO:");
                text.append(rs.getString("cod_livro"));

            } catch (SQLException ex) {
                Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (livroSelecionado.getSelectedIndex() == 1) {   //MOSTRANDO INFORMAÇÕES DA TABELA ESCRITOR
            String inserir = "select * from escritor order by cod_escritor";
            try {
                ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
                rs = ps.executeQuery();
                rs.next();
                text.setText("");
                text.setText("");
                text.append("\n ESCRITOR:");
                text.append(rs.getString("nome_escritor"));
                text.append("\n E-MAIL:");
                text.append(rs.getString("email_escritor"));
                text.append("\n GENERO:");
                text.append(rs.getString("genero_literario_escritor"));
                text.append("\n __________________________________ CODIGO:");
                text.append(rs.getString("cod_escritor"));
            } catch (SQLException ex) {
                Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (livroSelecionado.getSelectedIndex() == 2) {   //MOSTRANDO INFORMAÇÕES DA TABELA LEITURA
            String inserir = "select * from leitura order by cod_leitura";
            try {
                ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
                rs = ps.executeQuery();
                rs.next();
                text.setText("");
                text.setText("");
                text.append("\n COD LIVRO:");
                text.append(rs.getString("fk_cod_livro"));
                text.append("\n AVALIACAO:");
                text.append(rs.getString("avaliacao"));
                text.append("\n ANOTAÇAO:");
                text.append(rs.getString("anotacao_leitura"));
                text.append("\n SITUAÇÃO DE LEITURA:");
                text.append(rs.getString("situacao_leitura"));
                text.append("\n __________________________________ CODIGO:");
                text.append(rs.getString("cod_leitura"));
            } catch (SQLException ex) {
                Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        // TODO add your handling code here:

        if (livroSelecionado.getSelectedIndex() == 0) {   //VOLTANDO REGISTRO DA TABELA LIVRO
            try {
                if (rs.previous()) {
                    text.setText("");
                    text.append("\n TITULO:");
                    text.append(rs.getString("titulo_livro"));
                    text.append("\n EDITORA:");
                    text.append(rs.getString("editora_livro"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_livro"));
                    text.append("\n PAGINAS:");
                    text.append(rs.getString("qte_paginas_livro"));
                    text.append("\n IDIOMA:");
                    text.append(rs.getString("idioma_livro"));
                    text.append("\n ANO:");
                    text.append(rs.getString("ano_publicacao_livro"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_livro"));
                }
            } catch (SQLException e) { //trata os erros

            }
        } else if (livroSelecionado.getSelectedIndex() == 1) {    //VOLTANDO REGISTRO DA TABELA ESCRITOR
            try {
                if (rs.previous()) {
                    text.setText("");
                    text.append("\n ESCRITOR:");
                    text.append(rs.getString("nome_escritor"));
                    text.append("\n E-MAIL:");
                    text.append(rs.getString("email_escritor"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_literario_escritor"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_escritor"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        } else if (livroSelecionado.getSelectedIndex() == 2) {    //VOLTANDO REGISTRO DA TABELA LEITURA
            try {
                if (rs.previous()) {
                    text.setText("");
                    text.append("\n COD LIVRO:");
                    text.append(rs.getString("fk_cod_livro"));
                    text.append("\n AVALIACAO:");
                    text.append(rs.getString("avaliacao"));
                    text.append("\n ANOTAÇAO:");
                    text.append(rs.getString("anotacao_leitura"));
                    text.append("\n SITUAÇÃO DE LEITURA:");
                    text.append(rs.getString("situacao_leitura"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_leitura"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }
    }//GEN-LAST:event_anteriorActionPerformed

    private void ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ultimoActionPerformed
        // TODO add your handling code here:
        if (livroSelecionado.getSelectedIndex() == 0) {    //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA LIVRO
            try {
                if (rs.last()) {
                    text.setText("");
                    text.append("\n TITULO:");
                    text.append(rs.getString("titulo_livro"));
                    text.append("\n EDITORA:");
                    text.append(rs.getString("editora_livro"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_livro"));
                    text.append("\n PAGINAS:");
                    text.append(rs.getString("qte_paginas_livro"));
                    text.append("\n IDIOMA:");
                    text.append(rs.getString("idioma_livro"));
                    text.append("\n ANO:");
                    text.append(rs.getString("ano_publicacao_livro"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_livro"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }

        if (livroSelecionado.getSelectedIndex() == 1) {     //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA ESCRITOR
            try {
                if (rs.last()) {
                    text.setText("");
                    text.append("\n ESCRITOR:");
                    text.append(rs.getString("nome_escritor"));
                    text.append("\n E-MAIL:");
                    text.append(rs.getString("email_escritor"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_literario_escritor"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_escritor"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        } else if (livroSelecionado.getSelectedIndex() == 2) {     //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA LEITURA
            try {
                if (rs.last()) {
                    text.setText("");
                    text.append("\n COD LIVRO:");
                    text.append(rs.getString("fk_cod_livro"));
                    text.append("\n AVALIACAO:");
                    text.append(rs.getString("avaliacao"));
                    text.append("\n ANOTAÇAO:");
                    text.append(rs.getString("anotacao_leitura"));
                    text.append("\n SITUAÇÃO DE LEITURA:");
                    text.append(rs.getString("situacao_leitura"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_leitura"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }
    }//GEN-LAST:event_ultimoActionPerformed

    private void posteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posteriorActionPerformed
        if (livroSelecionado.getSelectedIndex() == 0) {     //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA LIVRO
            try {
                if (rs.next()) {
                    text.setText("");
                    text.append("\n TITULO:");
                    text.append(rs.getString("titulo_livro"));
                    text.append("\n EDITORA:");
                    text.append(rs.getString("editora_livro"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_livro"));
                    text.append("\n PAGINAS:");
                    text.append(rs.getString("qte_paginas_livro"));
                    text.append("\n IDIOMA:");
                    text.append(rs.getString("idioma_livro"));
                    text.append("\n ANO:");
                    text.append(rs.getString("ano_publicacao_livro"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_livro"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }

        if (livroSelecionado.getSelectedIndex() == 1) {     //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA ESCRITOR
            try {
                if (rs.next()) {
                    text.setText("");
                    text.append("\n ESCRITOR:");
                    text.append(rs.getString("nome_escritor"));
                    text.append("\n E-MAIL:");
                    text.append(rs.getString("email_escritor"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_literario_escritor"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_escritor"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        } else if (livroSelecionado.getSelectedIndex() == 2) {   //NAVEGANDO PARA O ULTIMO REGISTRO DA TABELA LEITURA
            try {
                if (rs.next()) {
                    text.setText("");
                    text.append("\n COD LIVRO:");
                    text.append(rs.getString("fk_cod_livro"));
                    text.append("\n AVALIACAO:");
                    text.append(rs.getString("avaliacao"));
                    text.append("\n ANOTAÇAO:");
                    text.append(rs.getString("anotacao_leitura"));
                    text.append("\n SITUAÇÃO DE LEITURA:");
                    text.append(rs.getString("situacao_leitura"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_leitura"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }

    }//GEN-LAST:event_posteriorActionPerformed

    private void primeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeiroActionPerformed
        if (livroSelecionado.getSelectedIndex() == 0) {   //NAVEGANDO PARA O PRIMEIRO REGISTRO DA TABELA LIVRO
            try {
                if (rs.first()) {
                    text.setText("");
                    text.append("\n TITULO:");
                    text.append(rs.getString("titulo_livro"));
                    text.append("\n EDITORA:");
                    text.append(rs.getString("editora_livro"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_livro"));
                    text.append("\n PAGINAS:");
                    text.append(rs.getString("qte_paginas_livro"));
                    text.append("\n IDIOMA:");
                    text.append(rs.getString("idioma_livro"));
                    text.append("\n ANO:");
                    text.append(rs.getString("ano_publicacao_livro"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_livro"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        } else if (livroSelecionado.getSelectedIndex() == 1) {   //NAVEGANDO PARA O PRIMEIRO REGISTRO DA TABELA ESCRITOR
            try {
                if (rs.first()) {
                    text.setText("");
                    text.append("\n ESCRITOR:");
                    text.append(rs.getString("nome_escritor"));
                    text.append("\n E-MAIL:");
                    text.append(rs.getString("email_escritor"));
                    text.append("\n GENERO:");
                    text.append(rs.getString("genero_literario_escritor"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_escritor"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        } else if (livroSelecionado.getSelectedIndex() == 2) {    //NAVEGANDO PARA O PRIMEIRO REGISTRO DA TABELA LEITURA
            try {
                if (rs.first()) {
                    text.setText("");
                    text.append("\n COD LIVRO:");
                    text.append(rs.getString("fk_cod_livro"));
                    text.append("\n AVALIACAO:");
                    text.append(rs.getString("avaliacao"));
                    text.append("\n ANOTAÇAO:");
                    text.append(rs.getString("anotacao_leitura"));
                    text.append("\n SITUAÇÃO DE LEITURA:");
                    text.append(rs.getString("situacao_leitura"));
                    text.append("\n __________________________________ CODIGO:");
                    text.append(rs.getString("cod_leitura"));
                }
            } catch (SQLException e) { //trata os erros
                JOptionPane.showMessageDialog(null, "Não Existem mais Registros");
            }
        }

    }//GEN-LAST:event_primeiroActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        // TODO add your handling code here:

        if (tabela1.getSelectedIndex() == 0) {        //DETERMINANDO OS TIPOS DE CAMPOS QUE ESTAO SENDO UTILIZADOS
            if (registro.getSelectedIndex() == 0) {   // E TAMBÉM ARMAZENANDO OS CAMPOS SELECIONADOS 
                nomeRegistro = "titulo_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 1) {
                nomeRegistro = "editora_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 2) {
                nomeRegistro = "genero_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 3) {
                nomeRegistro = "qte_paginas_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 4) {
                nomeRegistro = "idioma_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 5) {
                nomeRegistro = "ano_publicacao_livro";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            }

        } else if (tabela1.getSelectedIndex() == 1) {
            if (registro.getSelectedIndex() == 0) {
                nomeRegistro = "nome_escritor";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 1) {
                nomeRegistro = "email_escritor";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 2) {
                nomeRegistro = "genero_literario_escritor";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            }

        } else if (tabela1.getSelectedIndex() == 2) {
            if (registro.getSelectedIndex() == 0) {
                nomeRegistro = "avaliacao";
                campo.setVisible(false);
                editarCampo.removeItem("Péssimo");
                editarCampo.removeItem("Ruim");
                editarCampo.removeItem("Razoavel");
                editarCampo.removeItem("Bom");
                editarCampo.removeItem("Ótimo");

                editarCampo.setVisible(true);
                editarCampo.addItem("Péssimo");
                editarCampo.addItem("Ruim");
                editarCampo.addItem("Razoavel");
                editarCampo.addItem("Bom");
                editarCampo.addItem("Ótimo");

                editarCampo.removeItem("Lendo");
                editarCampo.removeItem("Terminei");
                editarCampo.removeItem("Abandonado");
                editarCampo.removeItem("Já li");

            } else if (registro.getSelectedIndex() == 1) {
                nomeRegistro = "anotacao_leitura";
                campo.setVisible(true);
                editarCampo.setVisible(false);
            } else if (registro.getSelectedIndex() == 2) {
                nomeRegistro = "situacao_leitura";
                campo.setVisible(false);
                editarCampo.setVisible(true);

                editarCampo.removeItem("Lendo");
                editarCampo.removeItem("Terminei");
                editarCampo.removeItem("Abandonado");
                editarCampo.removeItem("Já li");

                editarCampo.addItem("Lendo");
                editarCampo.addItem("Terminei");
                editarCampo.addItem("Abandonado");
                editarCampo.addItem("Já li");

                editarCampo.removeItem("Péssimo");
                editarCampo.removeItem("Ruim");
                editarCampo.removeItem("Razoavel");
                editarCampo.removeItem("Bom");
                editarCampo.removeItem("Ótimo");
            }

        }
    }//GEN-LAST:event_pesquisarActionPerformed

    private void tabela1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabela1ActionPerformed
        // TODO add your handling code here:
        if (tabela1.getSelectedIndex() == 0) {           //ADICIONANDO COMPONENTES E REMOVENDO AQUELES NÃO NECECESSARIOS PARA CADA DETERMINADA TABELA
            registro.removeItem("Nome do Escritor");
            registro.removeItem("E-mail");
            registro.removeItem("Genero");
            registro.removeItem("Avaliação");
            registro.removeItem("Anotação");
            registro.removeItem("Situação");
            registro.removeItem("Nome do livro");
            registro.removeItem("Editora");
            registro.removeItem("Genero");
            registro.removeItem("Paginas");
            registro.removeItem("Idioma");
            registro.removeItem("Ano");

            registro.addItem("Nome do livro");
            registro.addItem("Editora");
            registro.addItem("Genero");
            registro.addItem("Paginas");
            registro.addItem("Idioma");
            registro.addItem("Ano");
        } else if (tabela1.getSelectedIndex() == 1) {
            registro.removeItem("Nome do livro");
            registro.removeItem("Editora");
            registro.removeItem("Genero");
            registro.removeItem("Paginas");
            registro.removeItem("Idioma");
            registro.removeItem("Ano");
            registro.removeItem("Avaliação");
            registro.removeItem("Anotação");
            registro.removeItem("Situação");
            registro.removeItem("Nome do Escritor");
            registro.removeItem("E-mail");
            registro.removeItem("Genero");

            registro.addItem("Nome do Escritor");
            registro.addItem("E-mail");
            registro.addItem("Genero");
        } else if (tabela1.getSelectedIndex() == 2) {
            registro.removeItem("Nome do livro");
            registro.removeItem("Editora");
            registro.removeItem("Genero");
            registro.removeItem("Paginas");
            registro.removeItem("Idioma");
            registro.removeItem("Ano");
            registro.removeItem("Nome do Escritor");
            registro.removeItem("E-mail");
            registro.removeItem("Genero");
            registro.removeItem("Avaliação");
            registro.removeItem("Anotação");
            registro.removeItem("Situação");

            registro.addItem("Avaliação");
            registro.addItem("Anotação");
            registro.addItem("Situação");
        }
    }//GEN-LAST:event_tabela1ActionPerformed

    private void registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registroActionPerformed

    private void campoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoActionPerformed

    private void cod1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cod1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cod1ActionPerformed

    private void editarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarCampoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editarCampoActionPerformed

    private void botaoEditar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditar3ActionPerformed
        // TODO add your handling code here:
        String nomeCampoRegistro = "";                   //ARMAZENANDO INFORMAÇÕES
        if (registro.getSelectedIndex() == 0) {
            if (editarCampo.getSelectedIndex() == 0) {
                nomeCampoRegistro = "pessimo";
            } else if (editarCampo.getSelectedIndex() == 1) {
                nomeCampoRegistro = "ruim";
            } else if (editarCampo.getSelectedIndex() == 2) {
                nomeCampoRegistro = "razoavel";
            } else if (editarCampo.getSelectedIndex() == 3) {
                nomeCampoRegistro = "bom";
            } else if (editarCampo.getSelectedIndex() == 4) {
                nomeCampoRegistro = "otimo";
            }
        } else if (registro.getSelectedIndex() == 2) {
            if (editarCampo.getSelectedIndex() == 0) {
                nomeCampoRegistro = "lendo";
            } else if (editarCampo.getSelectedIndex() == 1) {
                nomeCampoRegistro = "terminei";
            } else if (editarCampo.getSelectedIndex() == 2) {
                nomeCampoRegistro = "abandonado";
            } else if (editarCampo.getSelectedIndex() == 3) {
                nomeCampoRegistro = "ja li";
            }
        }

        if (tabela1.getSelectedIndex() == 0) {     //ATUALIZANDO TABELA LIVRO
            try {
                String incluir = "update livro set " + nomeRegistro + " = '" + campo.getText() + "' where cod_livro = " + cod1.getText();
                conectar.createStatement().execute(incluir);
            } catch (SQLException ex) {
                System.exit(-1);
            }
        } else if (tabela1.getSelectedIndex() == 1) {      //ATUALIZANDO TABELA ESCRITOR
            try {
                String incluir = "update escritor set " + nomeRegistro + " = '" + campo.getText() + "' where cod_escritor = " + cod1.getText();
                conectar.createStatement().execute(incluir);
            } catch (SQLException ex) {
                System.exit(-1);
            }
        } else if (tabela1.getSelectedIndex() == 2) {      //ATUALIZANDO TABELA LEITURA
            try {
                if (registro.getSelectedIndex() == 0 || registro.getSelectedIndex() == 2) {
                    String incluir = "update leitura set " + nomeRegistro + " = '" + nomeCampoRegistro + "' where cod_leitura = " + cod1.getText();
                    conectar.createStatement().execute(incluir);
                } else {
                    String incluir = "update leitura set " + nomeRegistro + " = '" + campo.getText() + "' where cod_leitura = " + cod1.getText();
                    conectar.createStatement().execute(incluir);
                }
            } catch (SQLException ex) {
                System.exit(-1);
            }
        }


    }//GEN-LAST:event_botaoEditar3ActionPerformed

    private void leitura2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leitura2ActionPerformed
        // TODO add your handling code here:
        String inserir = "select * from leitura order by cod_leitura";  //MOSTRANDO DADOS DA TABELA LEITURA
        txt2.setText("");
        try {
            ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
            rs = ps.executeQuery();
            text.setText("");
            while (rs.next()) {
                txt2.append("\n COD LIVRO:");
                txt2.append(rs.getString("fk_cod_livro"));
                txt2.append(" - COD LEITURA:");
                txt2.append(rs.getString("cod_leitura"));
                txt2.append("\n     AVALIACAO:");
                txt2.append(rs.getString("avaliacao"));
                txt2.append("   |  ANOTAÇAO:");
                txt2.append(rs.getString("anotacao_leitura"));
                txt2.append("   |  SITUAÇÃO DE LEITURA:");
                txt2.append(rs.getString("situacao_leitura"));
                txt2.append("\n________________________________________________________________________________________________________________________________________________________________________");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_leitura2ActionPerformed

    private void livro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livro1ActionPerformed
        // TODO add your handling code here:
        String inserir = "select * from livro order by cod_livro";   //MOSTRANDO DADOS DA TABELA LIVRO
        txt2.setText("");
        try {
            ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
            rs = ps.executeQuery();
            txt2.setText("");
            while (rs.next()) {
                txt2.append("\n CODIGO:");
                txt2.append(rs.getString("cod_livro"));
                txt2.append("\n     TITULO: ");
                txt2.append(rs.getString("titulo_livro"));
                txt2.append("   |  EDITORA: ");
                txt2.append(rs.getString("editora_livro"));
                txt2.append("   |  GENERO: ");
                txt2.append(rs.getString("genero_livro"));
                txt2.append("   |  PAGINAS: ");
                txt2.append(rs.getString("qte_paginas_livro"));
                txt2.append("   |  IDIOMA: ");
                txt2.append(rs.getString("idioma_livro"));
                txt2.append("   |  ANO: ");
                txt2.append(rs.getString("ano_publicacao_livro"));
                txt2.append("\n________________________________________________________________________________________________________________________________________________________________________");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_livro1ActionPerformed

    private void escritor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escritor2ActionPerformed
        // TODO add your handling code here:
        String inserir = "select * from escritor order by cod_escritor";   //MOSTRANDO DADOS DA TABELA ESCRITOR
        txt2.setText("");
        try {
            ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
            rs = ps.executeQuery();
            text.setText("");
            while (rs.next()) {
                txt2.append("\n CODIGO:");
                txt2.append(rs.getString("cod_escritor"));
                txt2.append("\n     ESCRITOR:");
                txt2.append(rs.getString("nome_escritor"));
                txt2.append("   |  E-MAIL:");
                txt2.append(rs.getString("email_escritor"));
                txt2.append("   |  GENERO:");
                txt2.append(rs.getString("genero_literario_escritor"));
                txt2.append("\n________________________________________________________________________________________________________________________________________________________________________");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_escritor2ActionPerformed

    private void relacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relacoesActionPerformed
        // TODO add your handling code here:
        String inserir = "select * from escritor_livro order by cod_livro_escritor";   //MOSTRANDO DADOS DA TABELA ESCRITOR_LIVRO -> RELAÇÕES
        txt2.setText("");
        try {
            ps = conectar.prepareStatement(inserir, ResultSet.CONCUR_UPDATABLE, ResultSet.TYPE_SCROLL_SENSITIVE);
            rs = ps.executeQuery();
            text.setText("");
            while (rs.next()) {
                txt2.append("\n CODIGO DA RELAÇAO:");
                txt2.append(rs.getString("cod_livro_escritor"));
                txt2.append("\n     CODIGO DO LIVRO:");
                txt2.append(rs.getString("fk_cod_livro"));
                txt2.append("   |  CODIGO DO ESCRITOR:");
                txt2.append(rs.getString("fk_cod_escritor"));
                txt2.append("\n________________________________________________________________________________________________________________________________________________________________________");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Iniciar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_relacoesActionPerformed

    private void tabelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelasActionPerformed
        // TODO add your handling code here:
        visaoGeral.setVisible(true);
    }//GEN-LAST:event_tabelasActionPerformed

    private void salvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvar1ActionPerformed
        // TODO add your handling code here:

        //Mudança de Tela
        leitura1.setVisible(false);
        escritor.setVisible(false);
        livro.setVisible(false);
        editar.setVisible(false);
        meusLivros.setVisible(false);
        excluir.setVisible(false);

        int numAvaliacao = avaliacao1.getSelectedIndex();
        String textAvaliacao = "bom";

        if (numAvaliacao == 0) {       //Armazenando infomações
            textAvaliacao = "pessimo";
        } else if (numAvaliacao == 1) {
            textAvaliacao = "ruim";
        } else if (numAvaliacao == 2) {
            textAvaliacao = "razoavel";
        } else if (numAvaliacao == 3) {
            textAvaliacao = "bom";
        } else if (numAvaliacao == 4) {
            textAvaliacao = "otimo";
        }

        int numLeitura = situacaoLeitura1.getSelectedIndex();
        String textLeitura = "lendo";
        if (numLeitura == 0) {
            textLeitura = "lendo";
        } else if (numLeitura == 1) {
            textLeitura = "terminei";
        } else if (numLeitura == 2) {
            textLeitura = "abandonado";
        } else if (numLeitura == 3) {
            textLeitura = "ja li";
        }

        try {          //INSERINDO DADOS NA TABELA LEITURA 
            String comando = "insert into leitura (fk_cod_usuario,fk_cod_livro,avaliacao, anotacao_leitura,situacao_leitura)"
                    + "values ('" + numUser + "','" + codigoLivro1.getText() + "','" + textAvaliacao + "','" + anotacao1.getText() + "','" + textLeitura + "')";
            conectar.createStatement().execute(comando);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Essa relação já existe");
            leitura1.setVisible(true);
        }

        try {          //INSERINDO DADOS NA TABELA ESCRITOR_LIVRO  -> construindo relação 
            String comando = "insert into escritor_livro (fk_cod_livro, fk_cod_escritor) "
                    + "values ('" + codigoLivro1.getText() + "','" + codigoEscritor1.getText() + "')";
            conectar.createStatement().execute(comando);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Essa relação já existe");
            leitura1.setVisible(true);
        }

        //LIMPANDO CAMPOS
        codigoLivro1.setText("");
        codigoEscritor1.setText("");
        anotacao1.setText("");
        avaliacao1.setSelectedIndex(3);
        situacaoLeitura1.setSelectedIndex(1);
        titulo.setText("");
        editora.setText("");
        genero.setText("");
        ano.setText("");
        pagina.setText("");
        idioma.setText("");
        codEscritor.setText("");
        nomeEscritor.setText("");
        generoEscitor.setText("");
        email.setText("");

    }//GEN-LAST:event_salvar1ActionPerformed

    private void codigoLivro1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoLivro1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoLivro1ActionPerformed

    private void adicionarEscritor3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarEscritor3ActionPerformed
        // TODO add your handling code here:

        //Mudança de Tela
        leitura1.setVisible(false);
        livro.setVisible(true);
    }//GEN-LAST:event_adicionarEscritor3ActionPerformed

    private void codigoEscritor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoEscritor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoEscritor1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Iniciar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarEscritor;
    private javax.swing.JButton adicionarEscritor1;
    private javax.swing.JButton adicionarEscritor2;
    private javax.swing.JButton adicionarEscritor3;
    private javax.swing.JTextField ano;
    private javax.swing.JTextArea anotacao;
    private javax.swing.JTextArea anotacao1;
    private javax.swing.JButton anterior;
    private javax.swing.JComboBox<String> avaliacao;
    private javax.swing.JComboBox<String> avaliacao1;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoEditar3;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoLivro;
    private javax.swing.JButton buscar;
    private javax.swing.JButton cadastrarLivro;
    private javax.swing.JTextField campo;
    private javax.swing.JTextField cod1;
    private javax.swing.JTextField codEscritor;
    private javax.swing.JTextField codigoCampo;
    private javax.swing.JTextField codigoEscritor;
    private javax.swing.JTextField codigoEscritor1;
    private javax.swing.JTextField codigoLivro;
    private javax.swing.JTextField codigoLivro1;
    private javax.swing.JInternalFrame editar;
    private javax.swing.JComboBox<String> editarCampo;
    private javax.swing.JTextField editora;
    private javax.swing.JTextField email;
    private javax.swing.JLabel enunciado1;
    private javax.swing.JLabel enunciado10;
    private javax.swing.JLabel enunciado11;
    private javax.swing.JLabel enunciado12;
    private javax.swing.JLabel enunciado13;
    private javax.swing.JLabel enunciado14;
    private javax.swing.JLabel enunciado17;
    private javax.swing.JLabel enunciado2;
    private javax.swing.JLabel enunciado20;
    private javax.swing.JLabel enunciado21;
    private javax.swing.JLabel enunciado22;
    private javax.swing.JLabel enunciado23;
    private javax.swing.JLabel enunciado24;
    private javax.swing.JLabel enunciado25;
    private javax.swing.JLabel enunciado26;
    private javax.swing.JLabel enunciado27;
    private javax.swing.JLabel enunciado28;
    private javax.swing.JLabel enunciado29;
    private javax.swing.JLabel enunciado3;
    private javax.swing.JLabel enunciado30;
    private javax.swing.JLabel enunciado31;
    private javax.swing.JLabel enunciado4;
    private javax.swing.JLabel enunciado5;
    private javax.swing.JLabel enunciado6;
    private javax.swing.JLabel enunciado7;
    private javax.swing.JLabel enunciado8;
    private javax.swing.JLabel enunciado9;
    private javax.swing.JInternalFrame escritor;
    private javax.swing.JButton escritor2;
    private javax.swing.JInternalFrame excluir;
    private javax.swing.JButton excluirCampo;
    private javax.swing.JTextField genero;
    private javax.swing.JTextField generoEscitor;
    private javax.swing.JTextField idioma;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JInternalFrame leitura;
    private javax.swing.JInternalFrame leitura1;
    private javax.swing.JButton leitura2;
    private javax.swing.JInternalFrame livro;
    private javax.swing.JButton livro1;
    private javax.swing.JComboBox<String> livroSelecionado;
    private javax.swing.JInternalFrame meusLivros;
    private javax.swing.JTextField nomeEscritor;
    private javax.swing.JButton novoEscritor;
    private javax.swing.JTextField pagina;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton posterior;
    private javax.swing.JButton primeiro;
    private javax.swing.JButton proximo;
    private javax.swing.JComboBox<String> registro;
    private javax.swing.JButton relacoes;
    private javax.swing.JButton salvar;
    private javax.swing.JButton salvar1;
    private javax.swing.JComboBox<String> situacaoLeitura;
    private javax.swing.JComboBox<String> situacaoLeitura1;
    private javax.swing.JComboBox<String> tabela;
    private javax.swing.JComboBox<String> tabela1;
    private javax.swing.JButton tabelas;
    private javax.swing.JTextArea text;
    private javax.swing.JTextField titulo;
    private javax.swing.JTextArea txt2;
    private javax.swing.JButton ultimo;
    private javax.swing.JInternalFrame visaoGeral;
    // End of variables declaration//GEN-END:variables
}
